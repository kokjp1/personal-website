/* globals.css — shadcn-aligned theme tokens + minimal base */

@import "tailwindcss";
@import "tw-animate-css";

/* Tailwind v4 dark variant helper (works with <html class="dark">) */
@custom-variant dark (&:is(.dark *));

/* ---------------- Theme tokens (LIGHT) ----------------
   These match shadcn/ui defaults so variants (e.g., secondary)
   look the same as in the docs. Values are HSL components. */
:root {
  --background: 0 0% 100%;
  --foreground: 240 10% 3.9%;

  --card: 0 0% 100%;
  --card-foreground: 240 10% 3.9%;

  --popover: 0 0% 100%;
  --popover-foreground: 240 10% 3.9%;

  --primary: 240 5.9% 10%;
  --primary-foreground: 0 0% 98%;

  --secondary: 240 4.8% 95.9%;
  --secondary-foreground: 240 5.9% 10%;

  --muted: 240 4.8% 95.9%;
  --muted-foreground: 240 3.8% 46.1%;

  --accent: 240 4.8% 95.9%;
  --accent-foreground: 240 5.9% 10%;

  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 0 0% 98%;

  --border: 240 5.9% 90%;
  --input: 240 5.9% 90%;
  --ring: 240 5% 64.9%;

  --radius: 0.5rem;

  /* Optional chart palette (light) */
  --chart-1: 12 76% 61%;
  --chart-2: 173 58% 39%;
  --chart-3: 197 37% 24%;
  --chart-4: 43 74% 66%;
  --chart-5: 27 87% 67%;
}

/* ---------------- Theme tokens (DARK) ---------------- */
.dark {
  --background: 240 10% 3.9%;
  --foreground: 0 0% 98%;

  --card: 240 10% 3.9%;
  --card-foreground: 0 0% 98%;

  --popover: 240 10% 3.9%;
  --popover-foreground: 0 0% 98%;

  --primary: 0 0% 98%;
  --primary-foreground: 240 5.9% 10%;

  /* Neutral, muted surface for “secondary” in dark — matches docs */
  --secondary: 240 3.7% 15.9%;
  --secondary-foreground: 0 0% 98%;

  --muted: 240 3.7% 15.9%;
  --muted-foreground: 240 5% 64.9%;

  --accent: 240 3.7% 15.9%;
  --accent-foreground: 0 0% 98%;

  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 0 85.7% 97.3%;

  --border: 240 3.7% 15.9%;
  --input: 240 3.7% 15.9%;
  --ring: 240 4.9% 83.9%;

  /* Optional chart palette (dark) */
  --chart-1: 220 70% 50%;
  --chart-2: 160 60% 45%;
  --chart-3: 30 80% 55%;
  --chart-4: 280 65% 60%;
  --chart-5: 340 75% 55%;
}

/* ---------------- Tailwind token mapping ----------------
   Tailwind v4 reads these as the semantic colors.
   Use bg-background, text-foreground, border-border, etc. */
@theme inline {
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
}

/* ---------------- Base resets (minimal) ----------------
   Keep this lean so shadcn component CSS isn’t fought by globals. */
html {
  /* Stop horizontal bounce but KEEP normal layout metrics */
  overscroll-behavior-x: none;
}

body {
  max-width: 100%;
  overflow-x: hidden;      /* Kill horizontal pan */
  touch-action: pan-y;      /* Allow only vertical touch scroll */
  /* (Do NOT force a fixed height; the old `height: 100` (invalid) could
     confuse mobile layout + your center calculations) */
}

p {
  color: #52525b;
}

.dark p {
  color: #a1a1aa; 
}

body {
  @apply bg-background text-foreground;
  font-family: Inter, ui-sans-serif, system-ui, -apple-system, "Segoe UI",
    Roboto, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji",
    "Segoe UI Emoji", "Segoe UI Symbol";
  line-height: 1.6;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Paragraph body text (optional) */
/* p { color: hsl(var(--foreground) / 0.8); } */

/* Links – keep styling neutral; components handle their own states */
a { color: inherit; text-decoration: none; }
a:hover { text-decoration: underline; }

/* Don’t globally force borders/outlines on everything.
   This previously caused variant styles (including Button) to look off. */
@layer base {
  * { @apply border-border; }
  button:not([disabled]),
  [role="button"]:not([disabled]) {
    cursor: pointer;
  }
}

/* Tools group dimming */
#tools-grid li { transition: opacity .2s ease; }

#tools-grid[data-active-group="design"] li:not([data-group="design"]),
#tools-grid[data-active-group="development"] li:not([data-group="development"]),
#tools-grid[data-active-group="platforms/db"] li:not([data-group="platforms/db"]) {
  opacity: .35;
}

/* Put this NEAR THE END of globals.css so it loads after other styles */
@layer components {
  .minimal-toast {
    @apply flex items-start gap-2 rounded-lg px-3 py-2 text-xs backdrop-blur-sm border-2 shadow-sm;
    background: hsl(var(--background) / 0.88);
    color: hsl(var(--foreground));
    border-color: hsl(var(--border));
  }
  .dark .minimal-toast {
    background: hsl(var(--background) / 0.82);
    border-color: hsl(var(--border) / 0.65);
  }

  /* Title bold */
  .minimal-toast-title {
    font-weight: 700 !important;
    line-height: 1.15;
  }

  /* Make success icon green (covers Sonner’s possible structures) */
  .minimal-toast-success .sonner-icon,
  .minimal-toast-success [data-icon],
  .minimal-toast-success .sonner-icon svg,
  .minimal-toast-success [data-icon] svg,
  .minimal-toast-success > svg:first-of-type {
    color: #16a34a !important;      /* Tailwind emerald-600 */
    stroke: #16a34a !important;
    fill: #16a34a;
  }
}

.fslightbox-container,
.fslightbox-container .fslightbox-bg {
  background: rgba(0,0,0,0.8) !important;       
}

.fslightbox-container .fslightbox-bg {
  opacity: 1 !important;               
}

